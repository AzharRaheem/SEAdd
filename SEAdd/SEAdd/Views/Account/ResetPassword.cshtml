@model SEAdd.Models.ResetPasswordViewModel
@{
    Layout = "~/Views/Shared/_AccountLayout.cshtml";
    ViewBag.Title = "Register";
}
@section styles{
    <link rel="stylesheet" href="~/Content/resetPasswordForm.css" />
}
<div class="card login-form p-2">
    <div class="card-body">
        <h2 class="card-title text-center">Create New Password</h2>
        <div class="card-text">
            @using (Html.BeginForm("ResetPassword", "Account", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Code)
                <div class="form-group">
                    <div class="mt-2">
                        @Html.LabelFor(m => m.Email, new { @class = "from-control" })
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "Your Email Address" })
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    </div>
                    <div class="mt-3">
                        @Html.LabelFor(m => m.Password)
                        @Html.TextBoxFor(m => m.Password, new { @class = "form-control", type="password", placeholder = "Enter New Password" })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    </div>
                    <div class="mt-3">
                        @Html.LabelFor(m => m.ConfirmPassword)
                        @Html.TextBoxFor(m => m.ConfirmPassword, new { @class = "form-control",type="password" , placeholder = "Enter Confirm Password" })
                        @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                    <div class="text-center"><button type="submit" class="btn btn-primary btn-block">Reset Password</button></div>
                </div>
            }
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
